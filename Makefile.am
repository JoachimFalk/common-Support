## Process this file with automake to produce Makefile.in
# vim: set noet sw=2 ts=8 sts=0:
#
# Copyright (C) Joachim Falk <joachim.falk@gmx.de> $Date: 2003/01/15 16:43:20 $
#
# Makefile.am is part of the jflib distribution of Joachim Falk;
# you can redistribute it and/or modify it under the terms of the
# GNU General Public License as published by the Free Software Foundation;
# either version 2 of the License, or (at your option) any later version.
#
# The jflib distributio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public
# License along with this program; If not, write to
# the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# $Log$
root_srcdir   := $(shell cd $(top_srcdir)/.. && pwd)
root_builddir := $(shell cd $(top_builddir)/.. && pwd)

include $(auxdir)/jfrules.mk
include ../BuildSystem/doxygen.am

SUBDIRS=pkginclude

# This is only needed if there is a configure.in in this directory
ACLOCAL_AMFLAGS=-I ../BuildSystem/m4

AM_CPPFLAGS=				\
	@AM_CPPFLAGS@			\
	@BOOST_INCLUDE@			\
	@SYSTEMC_INCLUDE@		\
	@XERCES_INCLUDE@		\
	-I$(srcdir)/pkginclude		\
	-I$(srcdir)

AM_LDFLAGS=				\
	@AM_LDFLAGS@			\
	@BOOST_LDFLAGS@			\
	@SYSTEMC_LDFLAGS@		\
	@XERCES_LDFLAGS@

lib_LTLIBRARIES=			\
	libcosupport.la			\
	libcosupport-initializer.la	\
	libcosupport-smartptr.la	\
	libcosupport-xerces.la		\
	libcosupport-systemc.la		\
	libcosupport-streams.la		\
	libcosupport-string.la		\
	libcosupport-allocators.la

libcosupport_la_SOURCES =
libcosupport_la_LIBADD =			\
	libcosupport-initializer.la		\
	libcosupport-smartptr.la		\
	libcosupport-xerces.la			\
	libcosupport-systemc.la			\
	libcosupport-streams.la			\
	libcosupport-string.la			\
	libcosupport-allocators.la

libcosupport_initializer_la_SOURCES =		\
	BasicInitializer.cpp
libcosupport_initializer_la_LIBADD =		\
	-lboost_thread@BOOST_LIBMTPOSTFIX@

libcosupport_smartptr_la_SOURCES =		\
	RefCountObject.cpp
libcosupport_smartptr_la_LIBADD =		\
	$(refcount_CH_LTOBJS)			\
	$(refcount_object_CH_LTOBJS)		\
	-lboost_thread@BOOST_LIBMTPOSTFIX@

libcosupport_xerces_la_SOURCES =		\
	SMXIdManager.cpp
libcosupport_xerces_la_LIBADD =			\
	-lboost_thread@BOOST_LIBMTPOSTFIX@	\
	libcosupport-initializer.la		\
	-lxerces-c

libcosupport_systemc_la_SOURCES =		\
	par_manager.cpp				\
	PerformanceEvaluation.cpp
libcosupport_systemc_la_LIBADD =		\
	-lboost_thread@BOOST_LIBMTPOSTFIX@	\
	-lsystemc

libcosupport_streams_la_SOURCES =		\
	DebugOStream.cpp			\
	FilterOStream.cpp			\
	SocketTCPClient.cpp
libcosupport_streams_la_LIBADD =		\
	-lboost_iostreams@BOOST_LIBMTPOSTFIX@	\
	-lboost_system@BOOST_LIBMTPOSTFIX@

libcosupport_string_la_SOURCES =		\
	TemplateProcessor.cpp			\
	UniquePool.cpp
libcosupport_string_la_LIBADD =

libcosupport_allocators_la_SOURCES =
libcosupport_allocators_la_LIBADD =

noinst_PROGRAMS=			\
	test_arrayfifo			\
	test_event_and_list		\
	test_event_or_list		\
	test_nested_event_lists		\
	test_idpool			\
	test_facade

test_arrayfifo_SOURCES		  = test_arrayfifo.cpp
test_arrayfifo_LDADD		  =

test_event_and_list_SOURCES	  = test_event_and_list.cpp
test_event_and_list_LDADD	  = libcosupport-systemc.la

test_event_or_list_SOURCES	  = test_event_or_list.cpp
test_event_or_list_LDADD	  = libcosupport-systemc.la

test_nested_event_lists_SOURCES	  = test_nested_event_lists.cpp
test_nested_event_lists_LDADD	  = libcosupport-systemc.la libcosupport-streams.la

test_idpool_SOURCES		  = test_idpool.cpp
test_idpool_LDADD		  = libcosupport-allocators.la

test_facade_SOURCES		  = test_facade.cpp test_facade_lib.cpp
test_facade_LDADD		  = libcosupport-smartptr.la

# autotest script is build by some source file. #! line is generated by
#  automake to guarantee proper path. Other scripting languages are easy
#  possible, too (e.g., Perl).
noinst_SCRIPTS=autotest.sh

CLEANFILES=$(noinst_SCRIPTS)

autotest.sh: test_event_and_list $(srcdir)/autotest-sh
	rm -f $@
	echo "#!" $(BASH) > $@
	cat autovars.sh $(srcdir)/autotest-sh >> $@
	chmod +x $@

# to check we just call the 'autotest.sh' script
check: autotest.sh
	./autotest.sh
